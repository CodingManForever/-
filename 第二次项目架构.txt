/************************第二次项目架构**************************/
//可能会用到的头文件
#include <iostream>
#include <string>
#include <vector>
#include <graphics.h>	
#include <conio>
using namespace std;

/*******************全局变量*****************/
#define MAX_N 1000000
vector<string> str[1000000];	//动态字符串数组
int i=0;

/*
负责人：Master
各种操作的基类

//以下是切换界面函数
class Interface_Bace
{
private:
	初始化一个字符串对象String xxx;
	该对象定义 来定义文件所在路径
public:
	void login_interface();		//登陆界面
	void opening_menu();		//开始菜单
	void Learning_module();		//进入学习模块
	void Entertainment_module();//进入娱乐模块
	void Notepad();				//进入记事本
	void Todolist_Interface();	//切换待办界面按钮
	void Learning_clock();		//进入学习钟
	void Calculator_moudule();	//计算器模块  （算拓展）
	
}interface;//实例化


//文字操作的基类
class Operation_Bace
{
private:
	初始化一个QFont
public:
	//以下需要Qt来实现
	int QTimer();				//计时器模块 
	String SetFont_Bold();		//设置字体加粗
	String SetFont_Italic();	//设置字体斜体
	String SetFont_Underline();	//设置字体下划线
	
	
	
};
*/


/*******************以下重写基类中的各个函数*********************/


/*
登陆界面函数 login_interface
负责人：寒冰
参数：无
返回值：无
	void Interface_Bace::login_interface()
	{
		IMAGE login_interface;
		loadimage(&login_interface,"文件路径")；
		putimage(0,0,&login_interface);
		//初始化鼠标对象
		ExMessage ex = getmessage(EM_MOUSE);
		if(鼠标左键点击==登陆)
			返回登陆函数;
		if(鼠标左键点击==注册)
			返回注册函数;
	}
*/

/*
登陆函数 具体可以看下这篇博客
https://blog.csdn.net/qq_40663357/article/details/86663598?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522166878686716782412544197%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=166878686716782412544197&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-2-86663598-null-null.142^v65^control,201^v3^control_1,213^v2^t3_esquery_v2&utm_term=c%E8%AF%AD%E8%A8%80%E6%B3%A8%E5%86%8C%E7%99%BB%E5%BD%95%E7%B3%BB%E7%BB%9F&spm=1018.2226.3001.4187
负责人：寒冰


*/

/*
注册函数 View_Register
负责人：寒冰
	void View_Register()
	{
	}
*/

/*
开始菜单界面函数login_interface
负责人：致理
参数：无
返回值：无	
	void Interface_Bace::opening_menu()
	{
		IMAGE 开始界面的背景图：
		loadimage(&开始界面的背景图,"文件路径");
		putimage(0,0,&开始界面的背景图);
		//初始化鼠标对象
		ExMessage ex = getmessage(EM_MOUSE);
		if(鼠标左键点击==学习模块)
			返回学习模块;
		if(鼠标左键点击==娱乐模块)
			返回娱乐模块;
	}
*/

/*
加载娱乐模块界面的函数 Entertainment_module
负责人:致理
参数：无
返回值：无
	void Entertainment_module()
	{
		IMAGE 学习页面的背景图   （不加背景就太空了）可以自己找找哪些比较合适这款软件的背景图
		loadimage(&学习页面的背景图,"xxxxxxxx");
		putimage(0,0,&学习页面的背景图);
	}
*/

/*
加载学习模块的函数 Learning_module
负责人：twelve
参数：无
返回：无
	void Interface_Bace::Learning_module()
	{
		//初始化鼠标对象							
		ExMessage ex = getmessage(EM_MOUSE);		
		while(true)
		{			
			if(鼠标左键点击==笔记本)
				返回笔记本模块
			if(鼠标左键点击==记事本)
				返回记事本模块
			if(鼠标左键点击==学习钟)
				返回学习钟模块
			if(鼠标左键点击==计算器)
				返回计算器模块
		}
	}
*/
		
/*
鼠标接收范围函数
负责人:twelve
定义一个内联函数(为啥要顶一个内联函数自己查一下原因)
inline bool JudegView(short mouse_x,short mouse_y,int left,int top,int right,int bottom){
	if(鼠标x坐标>=矩形左侧&&鼠标x坐标<=矩形右侧&&鼠标y坐标<=下侧&&鼠标y坐标>=上侧)
		返回真
	否则 返回假
}
*/

/*
切换至待办事项界面的函数 
负责人：正负
参数：无
返回值：无
	void Interface_Bace::Todolist_module()
	{
		初始化一个鼠标对象
		if(鼠标左键点击==待办事项)
			return 待办函数;
	}
*/

/*
实现整个代办界面的功能 	
负责人：正负
	
	
	
	
*/


/*
笔记本中对文字操作的函数
负责人：Master
	
*/

/*
EasyX绘制一个简单的下拉菜单
负责人：Master
//按钮类
class BUTTON
{
public:
	BUTTON() {}
	BUTTON(string txt, int x, int y, int w = 100, int h = 35) : txt(txt), x(x), y(y), w(w), h(h) {}

	void ShowButton(ExMessage msg);	//绘制按钮
	bool isInButton(ExMessage msg);	//判断鼠标是否在按钮上
	string getTxT();
	int getX();
	int getY();
	int getW();
	int getH();
private:
	string txt;	//按钮文本
	int x;		//按钮左上角 x 坐标
	int y;		//按钮左上角 y 坐标
	int w;		//按钮宽度
	int h;		//按钮高度
};
//菜单类
class MENU
{
public:
	MENU(int nums, BUTTON* root = nullptr) : nums(nums), root(root) {}

	void InitButtons();														//初始化下拉后要展示的按钮
	void InitRootButton(string txt, int x, int y, int w = 100, int h = 35);	//初始化菜单的根按钮
	void ShowMenu(ExMessage msg, IMAGE img);								//绘制菜单
	void inShowMenu(ExMessage msg);											//判断鼠标是否在菜单上

	BUTTON* getRoot();
private:
	int		nums;			//菜单下拉按钮的数量
	bool	is = false;		//判断是否展开菜单
	BUTTON* root;			//菜单根按钮
	vector<BUTTON> buttons;	//下拉的各个按钮
};

*/




/*
计算器模块
先不做
*/
